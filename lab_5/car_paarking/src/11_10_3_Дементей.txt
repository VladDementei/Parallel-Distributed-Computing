import java.util.Random;

public class CarPark {
    public static void main(String[] args) {
        CarParkControl carParkControl = new CarParkControl(10);

        new Thread(() -> {
            try {
                while (true) {
                    carParkControl.arrive();
                    Thread.sleep(500 + new Random().nextInt() % 500);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();

        new Thread(() -> {
            try {
                while (true) {
                    carParkControl.depart();
                    Thread.sleep(1000 + new Random().nextInt() % 500);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
    }
}

class CarParkControl {
    private int spaces;
    private int capacity;

    CarParkControl(int n) {
        this.capacity = this.spaces = n;
    }

    synchronized void arrive() throws InterruptedException {
        System.out.println("New car arrived");
        while (spaces == 0) {
            wait();
        }
        System.out.println("New car parked");
        --spaces;
        System.out.println(spaces + " places left");
        notifyAll();
    }

    synchronized void depart() throws InterruptedException {
        while (spaces == capacity) {
            wait();
        }
        System.out.println("New car departed");
        ++spaces;
        System.out.println(spaces + " place left");
        notifyAll();
    }
}
